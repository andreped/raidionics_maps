name: Build macOS ARM

on:
  push:
    branches:
      - '*'
  pull_request:
    branches: [master, release]
  workflow_dispatch:

env:
  MACOSX_DEPLOYMENT_TARGET: 14.0

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-14
            TARGET: macos
            CMD_BUILD: export MACOSX_DEPLOYMENT_TARGET=14.0 && python3 setup.py bdist_wheel --plat-name macosx_14_0_arm64

    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: arch -arm64 brew reinstall zlib

      - name: Setup pyenv
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
          MACOSX_DEPLOYMENT_TARGET: 14.0
          PYTHON_CONFIGURE_OPTS: "--enable-framework"
          CFLAGS: "-Wno-implicit-function-declaration"
          LDFLAGS: "-L/usr/local/opt/zlib/lib"
          CPPFLAGS: "-I/usr/local/opt/zlib/include"
          PKG_CONFIG_PATH: "/usr/local/opt/zlib/lib/pkgconfig"
        uses: "gabrielfalcao/pyenv-action@v13"
        with:
            default: "3.10"
            command: export MACOSX_DEPLOYMENT_TARGET=11.0 && pip3 install -U pip3 wheel setuptools

      - name: Collect submodules
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install wheel setuptools

      - name: Built wheel for ${{matrix.TARGET}}
        run: ${{matrix.CMD_BUILD}}

      - name: Upload Python wheel
        uses: actions/upload-artifact@v3
        with:
          name: Python wheel
          path: ${{github.workspace}}/dist/raidionicsmaps-*.whl
          if-no-files-found: error

  test:
    needs: build
    strategy:
      matrix:
        os: [ macos-14 ]
        python-version: ["3.10", "3.11", "3.12"]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: "Python wheel"

      - name: Install wheel
        run: pip install --default-timeout=100 --find-links=${{github.workspace}} raidionicsmaps-*
        shell: bash

      - name: Test CLI
        run: raidionicsmaps --help

      - name: Clone repo
        uses: actions/checkout@v1

      - name: Heatmap computation unit test
        run: cd ${{github.workspace}}/tests && python3 heatmap_generation_test.py
